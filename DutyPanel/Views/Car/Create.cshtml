@model DutyPanel.Models.Car

@{
    ViewBag.Title = "Создание нового автомобиля";
}
@if ((Session["User"] is DutyPanel.Models.AdminUser) || (Session["User"] is DutyPanel.Models.Driver))
{
    <h2>Создание нового автомобиля</h2>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

            <div class="editor-label">
                @Html.LabelFor(model => model.NumberCar)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.NumberCar)
                @Html.ValidationMessageFor(model => model.NumberCar)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IsPlaceFoDetainees)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsPlaceFoDetainees)
                @Html.ValidationMessageFor(model => model.IsPlaceFoDetainees)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BrandCar)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BrandCar)
                @Html.ValidationMessageFor(model => model.BrandCar)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ModelCar)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ModelCar)
                @Html.ValidationMessageFor(model => model.ModelCar)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ReleaseDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ReleaseDate)
                @Html.ValidationMessageFor(model => model.ReleaseDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Color)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Color)
                @Html.ValidationMessageFor(model => model.Color)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.FuelType)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FuelType)
                @Html.ValidationMessageFor(model => model.FuelType)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DateLastRefueling)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateLastRefueling)
                @Html.ValidationMessageFor(model => model.DateLastRefueling)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.SeatsCount)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SeatsCount)
                @Html.ValidationMessageFor(model => model.SeatsCount)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IsSpecSignal)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsSpecSignal)
                @Html.ValidationMessageFor(model => model.IsSpecSignal)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DesiredCategoryDriving)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DesiredCategoryDriving)
                @Html.ValidationMessageFor(model => model.DesiredCategoryDriving)
            </div>

            <p>
                <input type="submit" value="Создать" />
            </p>
    }

    <div>
        @Html.ActionLink("Вернуться назад к списку", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(function () {
                $("#ReleaseDate").appendDtpicker({ "dateFormat": "DD/MM/YYYY" , locale: "ru", closeOnSelected: true, firstDayOfWeek: 1 });
                $("#DateLastRefueling").appendDtpicker({ "dateFormat": "DD/MM/YYYY hh:mm", locale: "ru", closeOnSelected: true, firstDayOfWeek: 1  });
            });
        </script>
    }
}
else
{
    @Html.Partial("AccessError")
}