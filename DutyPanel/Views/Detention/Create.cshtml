@model DutyPanel.Models.Detention

@{
    ViewBag.Title = "Создание нового задержания";
}
@if ((Session["User"] is DutyPanel.Models.AdminUser) || (Session["User"] is DutyPanel.Models.OperativeWorker))
{
    <h2>Создание задержания</h2>
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

            <div class="editor-label">
                @Html.LabelFor(model => model.DetentionLastName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DetentionLastName)
                @Html.ValidationMessageFor(model => model.DetentionLastName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DetentionFirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DetentionFirstName)
                @Html.ValidationMessageFor(model => model.DetentionFirstName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DetentionSecondName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DetentionSecondName)
                @Html.ValidationMessageFor(model => model.DetentionSecondName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.DateOfDetention)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateOfDetention)
                @Html.ValidationMessageFor(model => model.DateOfDetention)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PleaceDetention)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PleaceDetention)
                @Html.ValidationMessageFor(model => model.PleaceDetention)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.BaseDetention)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BaseDetention)
                @Html.ValidationMessageFor(model => model.BaseDetention)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Things)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Things)
                @Html.ValidationMessageFor(model => model.Things)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.IsNotifiRelatives)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsNotifiRelatives)
                @Html.ValidationMessageFor(model => model.IsNotifiRelatives)
            </div>

            <p>
                <input type="submit" value="Создать" />
            </p>
    }

    <div>
        @Html.ActionLink("Вернуться назад к списку", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(function () {
                $("#DateOfDetention").appendDtpicker({ "dateFormat": "DD/MM/YYYY hh:mm" , locale: "ru", closeOnSelected: true, firstDayOfWeek: 1 });
            });
        </script>
    }
}
else
{
    @Html.Partial("AccessError")
}